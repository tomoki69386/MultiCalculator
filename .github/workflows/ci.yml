name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test-application:
    runs-on: macos-latest
    name: test-application
    env:
      DEVELOPER_DIR: "/Applications/Xcode_11.5.app"
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin
    steps:
      - uses: actions/checkout@v2
      
      # Mintのインストール
      - name: Install Mint
        run: brew install mint

      # Mintで管理しているライブラリのキャッシュ復元
      - name: Cache Mint packages
        uses: actions/cache@v2
        with:
          path: mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-

      # プロジェクトファイルの生成
      - name: Generate Xcode project with XcodeGen
        run: mint run xcodegen xcodegen generate

      - name: iOS test
        run: |
          set -o pipefail
          xcodebuild build-for-testing test-without-building -project MultiCalculator.xcodeproj -scheme MultiCalculatorTests -configuration Debug -sdk iphonesimulator -destination "name=iPhone 8" ENABLE_TESTABILITY=YES | xcpretty -c
          
  test-shared:
    runs-on: macos-latest
    name: test-shared
    env:
      DEVELOPER_DIR: "/Applications/Xcode_11.5.app"
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin
    steps:
      - uses: actions/checkout@v2
      
      # Mintのインストール
      - name: Install Mint
        run: brew install mint

      # Mintで管理しているライブラリのキャッシュ復元
      - name: Cache Mint packages
        uses: actions/cache@v2
        with:
          path: mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-

      # プロジェクトファイルの生成
      - name: Generate Xcode project with XcodeGen
        run: mint run xcodegen xcodegen generate

      - name: Cache Gem
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      
      - name: Bundle install
        run: bundle install --path vendor/bundle

      - name: iOS test
        run: bundle exec fastlane test_shared
